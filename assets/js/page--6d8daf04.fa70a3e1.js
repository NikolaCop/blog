(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{477:function(e,t,o){"use strict";o.r(t);var a=o(2),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("p",[e._v("Read Foundations of C# > C# Data Types and answer the following questions\nWhat are the three categories of data types? How are they different?\n"),o("code",[e._v("Value type - A data type is a value type if it holds a data value within its own memory space. It means the variables of these data types directly contain values. Reference type - Unlike value types, a reference type doesn't store its value directly. Instead, it stores the address where the value is being stored. In other words, a reference type contains a pointer to another memory location that holds the data. Pointer type - Pointer types do not inherit from object and no conversions exist between pointer types and object.")])]),e._v(" "),o("p",[e._v("What are the Value-type data types? What differences do you notice from JavaScript?\n"),o("code",[e._v("bool, byte, char, decimal, double, enum, float, int, long, sbyte, short, struct, uint, ulong, ushort. I noticed that there is no 'let', or 'var'.")])]),e._v(" "),o("p",[e._v("In your own words how do Reference types get stored in memory? How does this differ from Value types?\n"),o("code",[e._v("Reference Types store data in its memory using a numerical value. It then directly references the numerical value to gather the data.")])]),e._v(" "),o("ul",[o("li",[o("ul",[o("li",[o("ul",[o("li",[e._v("Afternoon Project * * *")])])])])])])])}),[],!1,null,null,null);t.default=n.exports}}]);